"""
Analyze structure and usage of HIK characters.
"""
import maya
maya.utils.loadStringResourcesForModule(__name__)

import maya.cmds as cmds
from .BaseAnalytic import BaseAnalytic
from .decorators import addMethodDocs,addHelp,makeAnalytic

kAnalyticLabel = maya.stringTable['y_analyticHIK.kAnalyticLabel' ]
kAnalyticDescriptionShort = maya.stringTable['y_analyticHIK.kAnalyticDescriptionShort' ]

@addMethodDocs
@addHelp
@makeAnalytic(False)
class analyticHIK(BaseAnalytic):
    """
    Scan all of the HIK connections to see if any recognized patterns
    are found.

    FBIK pattern:
        A joint connects to an hikEffector through a message attribute.
        Interesting because it causes the EM to fail.
    """
    ANALYTIC_LABEL = kAnalyticLabel
    ANALYTIC_DESCRIPTION_SHORT = kAnalyticDescriptionShort

    def run(self):
        """
        Run the analytics on the current scene.
        :return: JSON with the error message if it failed, else None
        """
        # Find all joints present
        all_joints = cmds.ls( type='joint' )
        try:
            joint_count = len(all_joints)
        except TypeError:
            joint_count = 0

        # Find all hikEffectors present
        all_hik_effectors = cmds.ls( type='hikEffector' )
        try:
            hik_effector_count = len(all_hik_effectors)
        except TypeError:
            hik_effector_count = 0

        self._output_csv( [ 'Pattern'
                          , 'Joints'
                          , 'Handles'
                          ] )

        if joint_count == 0 or hik_effector_count == 0:
            return { 'warning' : 'No patterns to report' }
        
        # Set the leading zero's on joint and effector names consistently
        if joint_count > hik_effector_count:
            self.set_node_count( joint_count )
        else:
            self.set_node_count( hik_effector_count )

        # Loop through all joints, looking for the connection from the
        # message attribute to the hik_effector node
        for joint in all_joints:
            effectors = cmds.listConnections( '%s.message' % joint )
            for effector in effectors:
                if cmds.nodeType( effector ) == 'hikEffector':
                    self._output_csv( ['FBIK'
                                      , self._node_name( joint )
                                      , self._node_name( effector ) ] )

        return None

# ===========================================================================
# Copyright 2018 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
