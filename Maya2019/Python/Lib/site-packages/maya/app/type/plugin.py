import maya.cmds as cmds
import maya.OpenMaya as om
import maya.OpenMayaAnim as oma

animCallback = None

def register():
    IN_BATCH_MODE = om.MGlobal.mayaState() == om.MGlobal.kBatch or om.MGlobal.mayaState() == om.MGlobal.kLibraryApp 
    if not IN_BATCH_MODE:
        if getAnimCallbackOption(): 
            registerAnimCallback()

def deregister():
    # Clear up callbacks
    removeAnimCallback()

def getAnimCallbackOption():
    option = cmds.optionVar(exists='typeAnimCallbackEnabled')
    if not option:
        cmds.optionVar(iv=['typeAnimCallbackEnabled',0])
    return cmds.optionVar(q='typeAnimCallbackEnabled')

def setAnimCallbackOption(enabled):
    cmds.optionVar(iv=['typeAnimCallbackEnabled',enabled])
    if enabled:
        registerAnimCallback()
    else:
        removeAnimCallback()

def registerAnimCallback():
    import maya.app.flux.core as fx
    global animCallback
    if not animCallback:
        animCallback = oma.MAnimMessage.addAnimCurveEditedCallback(animCurveEdited, None)
        animCallback = fx.MCallbackIdWrapper(animCallback)

def removeAnimCallback():
    global animCallback
    animCallback = None

def animCurveEdited(objs, clientData):
    # Short circuit
    if om.MFileIO.isReadingFile(): return

    plugsToSetDirty = set()

    for i in xrange(objs.length()):
        obj = objs[i]
        if obj.isNull(): continue
        try:
            animCurve = oma.MFnAnimCurve(obj)
            names = animCurve.name().split('_')
            if len(names) < 2: continue
            node, attr = names[:2]

            if not node or not cmds.objExists(node):
                continue
            if cmds.nodeType(node) in ('type', 'svgToPoly', 'shellDeformer') and attr.startswith('animation'):
                plugsToSetDirty.add(node + '.' + attr)
        except Exception as e:
            print "Error:", str(e)

    args = ','.join(('"%s"' % plug for plug in plugsToSetDirty))
    command = 'import maya.cmds as cmds; cmds.dgdirty(%s)' % args
    cmds.evalDeferred(command)

# ===========================================================================
# Copyright 2018 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
