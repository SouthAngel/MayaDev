
import maya.app.renderSetup.views.viewCmds as viewCmds

import maya.app.renderSetup.model.collection as collection
import maya.app.renderSetup.model.renderSetup as renderSetupModel
import maya.app.renderSetup.model.utils as utils

def _getSources(nodeName):
    '''Returns objects to add override in.
    i.e. selected render settings child collections in the visible render layer, otherwise,
    selected collections in the visible render layer if any, otherwise, the layer itself.'''
    visibleLayer = renderSetupModel.instance().getVisibleRenderLayer()
    rsccDic = { name:utils.nameToUserNode(name) for name in viewCmds.getSelection(renderSettingsChildCollections=True) }
    dic = { name:utils.nameToUserNode(name) for name in viewCmds.getSelection(collections=True) }
    finalCollections = set([])
    renderSettingsChildCollections = (node for name,node in rsccDic.iteritems() if node.getRenderLayer() == visibleLayer and node.parent().name() not in dic)
    for rscc in renderSettingsChildCollections:
        # We will get an exception if a collection override is created while a
        # render settings child collection is selected.
        try:
            finalCollections.add(visibleLayer.getCorrespondingCollection(nodeName, rscc.name()))
        except:
            # In that case we want to add the override to the visible layer.
            finalCollections.add(visibleLayer)
    if len(finalCollections) == 0:
        collections = (node for name,node in dic.iteritems() if node.getRenderLayer() == visibleLayer and node.parent().name() not in dic)
        for col in collections:
            # We will get an exception if a render settings child collection
            # override is created while a collection is selected.
            try:
                finalCollections.add(visibleLayer.getCorrespondingCollection(nodeName, col.name()))
            except:
                # Just verifying that this is indeed a render settings
                # collection override. If so, add the override to the
                # visible layer's render settings collection instance.
                if collection.RenderSettingsCollection.containsNodeName(nodeName):
                    finalCollections.add(visibleLayer.renderSettingsCollectionInstance())
                # If not, we still want to throw the exception.
                else:
                    raise
    if len(finalCollections) > 0:
        return list(finalCollections)
    else:
        return [visibleLayer]

def createAbsoluteOverride(nodeName, attrName):
    """ Add an absolute override to selected collections part of the visible render layer 
    or to the layer itself if no collections are selected """
    for source in _getSources(nodeName):
        source.createAbsoluteOverride(nodeName, attrName)

def createRelativeOverride(nodeName, attrName):
    """ Add a relative override to the selected collections part of the visible render layer
    or to the layer itself if no collections are selected """
    for source in _getSources(nodeName):
        source.createRelativeOverride(nodeName, attrName)

def createConnectionOverride(nodeName, attrName):
    """ Add a connection override to the selected collections part of the visible render layer
    or to the layer itself if no collections are selected """
    for source in _getSources(nodeName):
        source.createConnectionOverride(nodeName, attrName)
# ===========================================================================
# Copyright 2018 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
