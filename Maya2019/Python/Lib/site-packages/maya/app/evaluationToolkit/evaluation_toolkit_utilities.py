'''
Collection of utilities common to the evaluation toolkit objects
'''
import maya.mel as mel

          # Functions
__all__ = [ 'section_layout'
          , 'set_gpu_override_active'
          # Constants
          , 'BUTTON_WIDTH'
          , 'COLUMN_SPACING'
          , 'ROW_SPACING'
          , 'FILE_TEXT_FIELD_WIDTH'
          # Classes
          , 'EvaluationToolkitSection'
          , 'EvaluationToolkitSubsection' ]

BUTTON_WIDTH = 100           # Width of the standard button used in the toolkit
COLUMN_SPACING = 10          # Standard spacing between columns
ROW_SPACING = 4              # Standard spacing between rows
FILE_TEXT_FIELD_WIDTH = 150  # Width of a text field containing a file name

#======================================================================
class EvaluationToolkitSection(object):
    '''
    Base class with common methods for sections in the toolkit.
    '''
    def update_ui(self):
        '''Nothing to do by default for updating UI'''
        pass

#======================================================================
class EvaluationToolkitSubsection(object):
    '''
    Base class with common methods for subsections underneath sections in the toolkit.
    '''
    def update_ui(self):
        '''Nothing to do by default for updating UI'''
        pass

#======================================================================
def section_layout(start_closed):
    '''
    :param start_closed: True means the frame should be closed when the UI is initially created
    :return: A dictionary consisting of the parameters used by the top level frames
    '''
    return dict( marginWidth=15
               , marginHeight=4
               , collapse=start_closed
               , collapsable=True
               )

#======================================================================
def set_gpu_override_active(state):
    """
    This method activates or deactivates the OpenCL evaluator.

    TODO: This could be better implemented by moving the gpuOverride optionVar
          into one of the OptionVar class objects for automatic management.

    :param state: New activation state of the evaluator.
    """
    mel.eval('optionVar -iv gpuOverride %d' % (1 if state else 0))

    if state:
        mel.eval('turnOnOpenCLEvaluatorActive();')
    else:
        mel.eval('turnOffOpenCLEvaluatorActive();')

# ===========================================================================
# Copyright 2018 Autodesk, Inc. All rights reserved.
#
# Use of this software is subject to the terms of the Autodesk license
# agreement provided at the time of installation or download, or which
# otherwise accompanies this software in either electronic or hard copy form.
# ===========================================================================
